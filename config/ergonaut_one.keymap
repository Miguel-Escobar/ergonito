/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <locale/keys_es_latin_american.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
        };

        htl: htl {
            compatible = "zmk,behavior-hold-tap";
            label = "HTL";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            flavor = "balanced";
        };
    };

    combos {
        compatible = "zmk,combos";

        a_tilde {
            bindings = <&a_tilde>;
            key-positions = <37 19>;
        };

        e_tilde {
            bindings = <&e_tilde>;
            key-positions = <37 20>;
        };

        i_tilde {
            bindings = <&i_tilde>;
            key-positions = <37 21>;
        };

        o_tilde {
            bindings = <&o_tilde>;
            key-positions = <37 32>;
        };

        u_tilde {
            bindings = <&u_tilde>;
            key-positions = <37 31>;
        };

        u_dos_puntos {
            bindings = <&u_dos_puntos>;
            key-positions = <37 31 32>;
        };

        caps_lock {
            bindings = <&kp CAPS>;
            key-positions = <21 22>;
        };
    };

    macros {
        a_tilde: a_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ES_ACUTE &kp ES_A>;
            label = "A_TILDE";
        };

        e_tilde: e_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ES_ACUTE &kp ES_E>;
            label = "E_TILDE";
        };

        i_tilde: i_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ES_ACUTE &kp ES_I>;
            label = "I_TILDE";
        };

        o_tilde: o_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ES_ACUTE &kp ES_O>;
            label = "O_TILDE";
        };

        u_tilde: u_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ES_ACUTE &kp ES_U>;
            label = "U_TILDE";
        };

        u_dos_puntos: u_dos_puntos {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ES_UMLAUT &kp ES_U>;
            label = "U_DOS_PUNTOS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {

            bindings = <
&kp ES_HASH  &kp ES_J            &kp ES_G            &kp ES_M         &kp ES_P          &kp ES_V       &kp ES_SEMI   &kp ES_DOT             &kp ES_SLASH     &kp ES_DOUBLE_QUOTES  &kp ES_SINGLE_QUOTE  &kp ES_RIGHT_PARENTHESIS
&kp ES_Q     &hrm LEFT_GUI ES_R  &hrm LEFT_ALT ES_S  &hrm LCTRL ES_N  &hrm LSHIFT ES_D  &kp ES_B       &kp ES_COMMA  &hrm RIGHT_SHIFT ES_A  &hrm RCTRL ES_E  &hrm RIGHT_ALT ES_I   &hrm RIGHT_GUI ES_H  &kp ES_N_TILDE
&kp ES_Z     &kp ES_X            &kp ES_F            &kp ES_L         &kp ES_C          &kp ES_W       &kp ES_MINUS  &kp ES_U               &kp ES_O         &kp ES_Y              &kp ES_K             &kp LEFT_SHIFT
                                                     &htl 3 TAB       &htl 2 ES_T       &htl 4 ESCAPE  &htl 1 ENTER  &kp SPACE              &kp BACKSPACE
            >;

            label = "Base";
        };

        Number {

            bindings = <
&kp ES_LEFT_BRACKET  &kp ES_RIGHT_BRACKET  &kp ES_N7  &kp ES_N8     &kp ES_N9  &kp ES_ASTERISK  &trans      &kp ES_LEFT_BRACKET  &kp ES_RIGHT_BRACKET  &kp ES_CARET     &kp ES_EQUAL  &trans
&kp ES_EQUAL         &kp ES_SEMICOLON      &kp ES_N4  &kp ES_N5     &kp ES_N6  &kp ES_PLUS      &kp ES_DOT  &kp LEFT_SHIFT       &kp LEFT_CONTROL      &kp LEFT_ALT     &kp LEFT_GUI  &trans
&kp ES_UNDERSCORE    &kp ES_CARET          &kp ES_N1  &kp ES_N2     &kp ES_N3  &kp ES_DOT       &trans      &kp ES_PLUS          &kp ES_MINUS          &kp ES_ASTERISK  &kp ES_SLASH  &trans
                                                      &kp ES_SLASH  &kp ES_N0  &kp ES_MINUS     &trans      &trans               &trans
            >;

            label = "num";
        };

        Symbol {
            bindings = <
&kp ES_DEGREE                &kp ES_SINGLE_QUOTE           &kp ES_LESS_THAN        &kp ES_GREATER_THAN  &kp ES_DOUBLE_QUOTES  &kp ES_DOT    &kp ES_AMPERSAND  &kp ES_SEMICOLON  &kp ES_LEFT_BRACKET                     &kp ES_RIGHT_BRACKET                 &kp ES_PERCENT                   &trans
&kp ES_INVERTED_EXCLAMATION  &hrm LEFT_GUI ES_EXCLAMATION  &hrm LEFT_ALT ES_MINUS  &hrm LCTRL ES_PLUS   &hrm LSHFT ES_EQUAL   &kp ES_HASH   &kp ES_PIPE       &kp ES_COLON      &hrm RIGHT_CONTROL ES_LEFT_PARENTHESIS  &hrm RIGHT_ALT ES_RIGHT_PARENTHESIS  &hrm RIGHT_GUI ES_INVERTED_QUESTION  &kp ES_QUESTION
&trans                       &kp ES_CARET                  &kp ES_SLASH            &kp ES_BACKSLASH     &kp ES_ASTERISK       &kp ES_GRAVE  &kp ES_TILDE      &kp ES_DOLLAR     &kp ES_LEFT_BRACE                       &kp ES_RIGHT_BRACE                   &kp ES_AT                            &trans
                                                                                   &trans               &trans                &trans        &trans            &trans            &trans
            >;

            label = "sym";
        };

        Function {
            bindings = <
&trans       &bt BT_SEL 3      &bt BT_SEL 2  &bt BT_SEL 1          &bt BT_SEL 0          &kp C_VOLUME_UP  &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans
&bootloader  &kp LEFT_COMMAND  &kp LEFT_ALT  &kp LEFT_CONTROL      &kp LEFT_SHIFT        &kp C_VOL_DN     &trans  &kp F5  &kp F6   &kp F7   &kp F8   &bootloader
&bt BT_CLR   &trans            &trans        &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_MUTE       &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans
                                             &trans                &trans                &trans           &trans  &trans  &trans
            >;

            label = "fun";
        };

        Navigation {
            bindings = <
&trans  &trans        &trans        &trans            &trans          &trans  &trans  &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans
&trans  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans  &trans  &kp ES_H  &kp ES_J       &kp ES_K     &kp ES_L   &trans
&trans  &trans        &trans        &trans            &trans          &trans  &trans  &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans
                                    &trans            &trans          &none   &trans  &trans    &trans
            >;

            label = "nav";
        };
    };
};
