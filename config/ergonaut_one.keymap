/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
        };

        htl: htl {
            compatible = "zmk,behavior-hold-tap";
            label = "HTL";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp HASH  &kp J            &kp G            &kp M         &kp P          &kp V          &kp SEMI      &kp DOT             &kp FSLH       &kp DOUBLE_QUOTES  &kp APOS          &kp RIGHT_PARENTHESIS
&kp Q     &hrm LEFT_GUI R  &hrm LEFT_ALT S  &hrm LCTRL N  &hrm LSHIFT D  &kp B          &kp COMMA     &hrm RIGHT_SHIFT A  &hrm RCTRL E   &hrm RIGHT_ALT I   &hrm RIGHT_GUI H  &es_n_tilde
&kp Z     &kp X            &kp F            &kp L         &kp C          &kp W          &kp MINUS     &kp U               &kp O          &kp Y              &kp K             &trans
                                            &htl 3 TAB    &htl 2 T       &htl 4 ESCAPE  &htl 1 ENTER  &kp SPACE           &kp BACKSPACE
            >;

            label = "Base";
        };

        Number {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp N7  &kp N8     &kp N9  &kp ASTERISK  &trans  &trans          &trans            &trans        &trans        &trans
&kp EQUAL         &kp SEMICOLON      &kp N4  &kp N5     &kp N6  &kp PLUS      &trans  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &trans
&kp UNDERSCORE    &kp CARET          &kp N1  &kp N2     &kp N3  &kp DOT       &trans  &trans          &trans            &trans        &trans        &trans
                                             &kp SLASH  &kp N0  &kp MINUS     &trans  &trans          &trans
            >;

            label = "num";
        };

        Symbol {
            bindings = <
&trans  &kp SQT                    &kp LESS_THAN        &kp GREATER_THAN  &kp DOUBLE_QUOTES  &kp DOT    &kp AMPERSAND  &kp SEMICOLON  &kp LEFT_BRACKET                     &kp RIGHT_BRACKET                 &kp PERCENT              &trans
&trans  &hrm LEFT_GUI EXCLAMATION  &hrm LEFT_ALT MINUS  &hrm LCTRL PLUS   &hrm LSHFT EQUAL   &kp HASH   &kp PIPE       &kp COLON      &hrm RIGHT_CONTROL LEFT_PARENTHESIS  &hrm RIGHT_ALT RIGHT_PARENTHESIS  &hrm RIGHT_GUI QUESTION  &trans
&trans  &kp CARET                  &kp SLASH            &kp BACKSLASH     &kp ASTERISK       &kp GRAVE  &kp TILDE2     &kp DOLLAR     &kp LEFT_BRACE                       &kp RIGHT_BRACE                   &kp AT                   &trans
                                                        &trans            &trans             &trans     &trans         &trans         &trans
            >;

            label = "sym";
        };

        Function {
            bindings = <
&trans       &bt BT_SEL 3      &bt BT_SEL 2  &bt BT_SEL 1          &bt BT_SEL 0          &kp C_VOLUME_UP  &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans
&bootloader  &kp LEFT_COMMAND  &kp LEFT_ALT  &kp LEFT_CONTROL      &kp LEFT_SHIFT        &kp C_VOL_DN     &trans  &kp F5  &kp F6   &kp F7   &kp F8   &bootloader
&bt BT_CLR   &trans            &trans        &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_MUTE       &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans
                                             &trans                &trans                &trans           &trans  &trans  &trans
            >;

            label = "fun";
        };

        Navigation {
            bindings = <
&trans  &trans        &trans        &trans            &trans          &trans  &trans  &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans
&trans  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans  &trans  &kp H     &kp J          &kp K        &kp L      &trans
&trans  &trans        &trans        &trans            &trans          &trans  &trans  &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans
                                    &trans            &trans          &none   &trans  &trans    &trans
            >;

            label = "nav";
        };
    };
};
